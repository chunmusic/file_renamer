name: Build & Release File Renamer (Windows)

on:
  push:
    tags:
      - "v*.*.*"          # run when you push a tag like v1.0.0
  workflow_dispatch: {}    # allow manual run

permissions:
  contents: write          # needed to create releases

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # Python + uv
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up uv
        uses: astral-sh/setup-uv@v3

      # Create venv & install deps
      - name: Create venv (.venv)
        shell: pwsh
        run: |
          uv venv --python "$env:PythonLocation\python.exe"
          Get-ChildItem .venv

      - name: Install project dependencies
        shell: pwsh
        run: |
          uv pip install -p .venv PySide6 PySide6-Fluent-Widgets PySideSix-Frameless-Window pyinstaller

      # Build EXE (no signing; AV-friendly flags)
      - name: Build PyInstaller EXE
        shell: pwsh
        run: >
          uv run -p .venv pyinstaller --onefile --windowed --noupx --clean
          --name FileRenamer
          --hidden-import qfluentwidgets
          --hidden-import pyside6_frameless_window
          --collect-all qfluentwidgets
          --collect-all pyside6_frameless_window
          file_renamer.py

      - name: Verify EXE
        shell: pwsh
        run: |
          if (-not (Test-Path "dist\FileRenamer.exe")) { throw "EXE not found" }
          Get-ChildItem dist

      # Install Inno & build installer
      - name: Install Inno Setup
        shell: pwsh
        run: |
          choco install innosetup --no-progress -y
          if (-not (Test-Path "${env:ProgramFiles(x86)}\Inno Setup 6\ISCC.exe")) {
            throw "ISCC.exe not found after install"
          }

      - name: Build Inno installer
        shell: pwsh
        run: |
          $iscc = "${env:ProgramFiles(x86)}\Inno Setup 6\ISCC.exe"
          & $iscc FileRenamer.iss /Qp
          Get-ChildItem installer

      # Create GitHub Release and attach raw installer.exe (no zip)
      - name: Create GitHub Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          name: "File Renamer ${{ github.ref_name }}"
          tag_name: "${{ github.ref_name }}"
          generate_release_notes: true
          files: |
            installer/*.exe
